row_to_add_3 <- combined_qtldf %>%
slice(1:3) %>%
mutate(chr = "LG07",
col = '#FFFFFF')
combined_qtldf_2 <- rbind(combined_qtldf, row_to_add_1, row_to_add_2, row_to_add_3)
# ROW 1
outfile = file.path(file="./row_1.pdf")
mirror <- c(rep(c(FALSE, TRUE), 7))
lg_list <- c('Chr01', 'LG01', 'Chr04', 'LG04', 'Chr07', 'LG07', 'Chr10', 'LG10',
'Chr13', 'LG13', 'Chr16', 'LG16', 'Chr19', 'LG19')
lmv.linkage.plot(lmv_dat, outfile,
mapthese=lg_list,
showonly=names,ruler=TRUE,posonleft=mirror,labdist=0.1,lgw=0.2,
pdf.height=4, pdf.width = 24,
pdf.pointsize=10,maxnbrcolsfordups=1,markerformatlist=flist,qtldf = combined_qtldf,
lgperrow=14,
par(lwd=0.25),lty.axis=0.5)
# ROW 1
outfile = file.path(file="./row_1.pdf")
mirror <- c(rep(c(FALSE, TRUE), 7))
lg_list <- c('Chr01', 'LG01', 'Chr04', 'LG04', 'Chr07', 'LG07', 'Chr10', 'LG10',
'Chr13', 'LG13', 'Chr16', 'LG16', 'Chr19', 'LG19')
lmv.linkage.plot(lmv_dat, outfile,
mapthese=lg_list,
showonly=names,ruler=TRUE,posonleft=mirror,labdist=0.1,lgw=0.2,
pdf.height=4, pdf.width = 24,
pdf.pointsize=10,maxnbrcolsfordups=1,markerformatlist=flist,qtldf = combined_qtldf_2,
lgperrow=14,
par(lwd=0.25),lty.axis=0.5)
# ROW 2
outfile = file.path(file="./row_2.pdf")
mirror <- c(rep(c(FALSE, TRUE), 7))
lg_list <- c('Chr02', 'LG02', 'Chr05', 'LG05', 'Chr08', 'LG08',  'Chr11', 'LG11', 'Chr14', 'LG14', 'Chr17', 'LG17', 'Chr20', 'LG20')
lmv.linkage.plot(lmv_dat, outfile,
mapthese=lg_list,
showonly=names,ruler=TRUE,posonleft=mirror,labdist=0.1,lgw=0.2,
pdf.height=4, pdf.width = 24,
pdf.pointsize=10,maxnbrcolsfordups=1,markerformatlist=flist,qtldf = combined_qtldf_2,
lgperrow=14,
par(lwd=0.25),lty.axis=0.5)
# ROW 3
outfile = file.path(file="./row_3.pdf")
mirror <- c(rep(c(FALSE, TRUE), 7))
lg_list <- c('Chr03', 'LG03', 'Chr06', 'LG06', 'Chr09', 'LG09',  'Chr12', 'LG12', 'Chr15', 'LG15', 'Chr18', 'LG18', 'Chr21', 'LG21')
lmv.linkage.plot(lmv_dat, outfile,
mapthese=lg_list,
showonly=names,ruler=TRUE,posonleft=mirror,labdist=0.1,lgw=0.2,
pdf.height=4,pdf.width = 24,
pdf.pointsize=10,maxnbrcolsfordups=1,markerformatlist=flist,qtldf = combined_qtldf_2,
lgperrow=14,
par(lwd=0.25),lty.axis=0.5)
# in some cases the intervals for QTL will collapse on top
# of each other and so we create a blank white marker here to bump them out
# i had to make the map figures several times to identify and resolve and troubleshoot this problem
# see: for brief tutorial on this: https://github.com/bio-services/LinkageMapView/issues/13
all_data2 %>% filter(group == "02")
# in some cases the intervals for QTL will collapse on top
# of each other and so we create a blank white marker here to bump them out
# i had to make the map figures several times to identify and resolve and troubleshoot this problem
# see: for brief tutorial on this: https://github.com/bio-services/LinkageMapView/issues/13
all_data2 %>% filter(group == "LG02")
# in some cases the intervals for QTL will collapse on top
# of each other and so we create a blank white marker here to bump them out
# i had to make the map figures several times to identify and resolve and troubleshoot this problem
# see: for brief tutorial on this: https://github.com/bio-services/LinkageMapView/issues/13
all_data2 %>% filter(group == "LG02") %>% filter(marker_name == "sh5")
# in some cases the intervals for QTL will collapse on top
# of each other and so we create a blank white marker here to bump them out
# i had to make the map figures several times to identify and resolve and troubleshoot this problem
# see: for brief tutorial on this: https://github.com/bio-services/LinkageMapView/issues/13
all_data2 %>% filter(group == "LG02") %>% filter(marker_name == "SH5")
# in some cases the intervals for QTL will collapse on top
# of each other and so we create a blank white marker here to bump them out
# i had to make the map figures several times to identify and resolve and troubleshoot this problem
# see: for brief tutorial on this: https://github.com/bio-services/LinkageMapView/issues/13
all_data2 %>% filter(group == "LG02")
adjuster <- data.frame(marker_name = c("w", "w", "w", "w", "w", "w"),
cm_pos = c(380),
group = c("LG02"),
bp_pos = rep(NA, 1),
chr = c(2),
display = rep("adjuster", 1),
bp_min = c(109865),
bp_max = c(430937086),
cm_min = rep(0, 1),
cm_max = c(143.98),
map = rep("genetic", 1),
position = c(380))
adjuster
adjuster <- data.frame(marker_name = c("w"),
cm_pos = c(380),
group = c("LG02"),
bp_pos = rep(NA, 1),
chr = c(2),
display = rep("adjuster", 1),
bp_min = c(109865),
bp_max = c(430937086),
cm_min = rep(0, 1),
cm_max = c(143.98),
map = rep("genetic", 1),
position = c(380))
adjuster
# in some cases the intervals for QTL will collapse on top
# of each other and so we create a blank white marker here to bump them out
# i had to make the map figures several times to identify and resolve and troubleshoot this problem
# see: for brief tutorial on this: https://github.com/bio-services/LinkageMapView/issues/13
all_data2 %>% filter(group == "LG02")
qtldf_combined
qtldf
combined_qtldf_2
adjuster <- data.frame(marker_name = c("w"),
cm_pos = c(400),
group = c("LG02"),
bp_pos = rep(NA, 1),
chr = c(2),
display = rep("adjuster", 1),
bp_min = c(109865),
bp_max = c(430937086),
cm_min = rep(0, 1),
cm_max = c(143.98),
map = rep("genetic", 1),
position = c(380))
# add the adjuster markers to the map
all_data2 <- rbind(all_data2, adjuster)
#### Step 7: Load in the Linkage Mapping Results ####
# read in final LOD intervals from "Thresholds and 2-LOD Intervals.R
lod_intervals <- read.csv(paste(dir, "/QTL Linkage Mapping/output/lod_intervals_final.csv", sep = ""))
# select only QTL that were detected in the combined analysis to feature in the figure
lod_intervals_ed <- lod_intervals %>%
filter(famID == "combined") %>%
mutate(env = toupper(env),
chr = paste("LG", str_pad(lg, width = 2, side = c("left"), pad = "0"), sep = ""),
env_year = paste(env, year, sep = ""),
marker_name = NA) %>%
dplyr::select(lg, map, left, right, famID, trait, env, year, marker_name, chr, env_year) %>%
arrange(trait, map, lg, left, env_year)
# write out the result and manually combine approximately overlapping intervals and edit marker names
write.csv(lod_intervals_ed, "/Users/kayla.altendorf/OneDrive - USDA/Publications/IWG NAM Domestication Traits/Scripts for Github/Visualize Results/data/lod_intervals_ed.csv", row.names = F)
# delete markers that do not occur in more than one environment
# read back in
combined_qtl <- read.csv("/Users/kayla.altendorf/OneDrive - USDA/Publications/IWG NAM Domestication Traits/Scripts for Github/Visualize Results/data/lod_intervals_for_lmv.csv", header = T)
# prepare the map summary
map_sum_lg <- map_sum %>%
mutate(chr = str_replace(string = group, pattern = "Chr", replacement = "LG"))
# left join in the map sum
combined_qtl_map <- left_join(combined_qtl, map_sum_lg, by = "chr")
# calculate the ajusted positions and prepare order of dataframe for qtldf
combined_qtldf <- combined_qtl_map %>%
mutate(so = 1000 * (as.numeric(left) - cm_min) / (cm_max - cm_min),
si = so,
ei = 1000 * (as.numeric(right) - cm_min) / (cm_max - cm_min),
eo = ei,
qtl = marker_name,
col = "black") %>%
dplyr::select(chr, qtl, so, si, eo, ei, col, map)
# change the color based on the environment in which it was detected
for (i in 1:nrow(combined_qtldf)) {
if (combined_qtldf$map[i] == "DP") {combined_qtldf$col[i] <- "#56B4E9"}
else if (combined_qtldf$map[i] == "CP") {combined_qtldf$col[i] <- "#154ba1"}
}
# remove the group column
combined_qtldf <- combined_qtldf %>% dplyr::select(-map)
#### Step 8: Make the Figures ####
# select only needed columns
lmv_dat <- all_data2 %>%
dplyr::select(group, position, marker_name)
# first, all names that will be featured
names <- all_data2 %>%
filter(! is.na(display)) %>%
dplyr::select(marker_name)
names <- as.vector(as.matrix(names))
# then the genes
gene <- all_data2 %>%
filter(display == "gene") %>%
dplyr::select(marker_name)
gene <- as.vector(as.matrix(gene))
# the gwas QTL
gwas_qtl <- all_data2 %>%
filter(display == "gwas_qtl") %>%
dplyr::select(marker_name)
gwas_qtl <- as.vector(as.matrix(gwas_qtl))
# the ruler
ruler <- all_data2 %>%
filter(display == "ruler") %>%
dplyr::select(marker_name)
ruler <- as.vector(as.matrix(ruler))
#### Step 9: Create the Format List ####
# create formatting list for marker names
flist <- list()
# and the adjuster data
adjuster <- all_data2 %>%
filter(display == "adjuster") %>%
dplyr::select(marker_name)
adjuster <- as.vector(as.matrix(adjuster))
#### Step 9: Create the Format List ####
# create formatting list for marker names
flist <- list()
# gene names will be italic, black font
genes_vector <- gene
cex <- c(1) #size
font <- c(3)
col <- c("black")
flist[[1]] <- list(locus = genes_vector, font = font, cex = cex, col = col)
# gwas_qtl will be bold and blue
cex <- c(1) #size
font <- c(2) #bold
col <- c("black")
flist[[2]] <- list(locus = gwas_qtl, font = font, cex = cex, col = col)
# ruler
ruler_vector <- ruler
cex <- c(1) #size
font <- c(2) #plain
col <- c("black")
flist[[3]] <- list(locus = ruler_vector, font = font, cex = cex, col = col)
# adjuster values will be white so they're invisible
adjuster_vector <- adjuster
cex <- c(1) #size
font <- c(2) #plain
col <- c("white")
flist[[4]] <- list(locus = adjuster_vector, font = font, cex = cex, col = col)
#### Step 10: Create Each Plot ####
# set the working directory
setwd(paste(dir, folder, "output", sep = "/"))
row_to_add_1 <- combined_qtldf %>%
slice(1:1) %>%
mutate(chr = "LG02",
col = '#FFFFFF')
row_to_add_2 <- combined_qtldf %>%
slice(9:9) %>%
mutate(chr = "LG08",
col = '#FFFFFF')
row_to_add_3 <- combined_qtldf %>%
slice(1:3) %>%
mutate(chr = "LG07",
col = '#FFFFFF')
combined_qtldf_2 <- rbind(combined_qtldf, row_to_add_1, row_to_add_2, row_to_add_3)
# ROW 1
outfile = file.path(file="./row_1.pdf")
mirror <- c(rep(c(FALSE, TRUE), 7))
lg_list <- c('Chr01', 'LG01', 'Chr04', 'LG04', 'Chr07', 'LG07', 'Chr10', 'LG10',
'Chr13', 'LG13', 'Chr16', 'LG16', 'Chr19', 'LG19')
lmv.linkage.plot(lmv_dat, outfile,
mapthese=lg_list,
showonly=names,ruler=TRUE,posonleft=mirror,labdist=0.1,lgw=0.2,
pdf.height=4, pdf.width = 24,
pdf.pointsize=10,maxnbrcolsfordups=1,markerformatlist=flist,qtldf = combined_qtldf_2,
lgperrow=14,
par(lwd=0.25),lty.axis=0.5)
# ROW 2
outfile = file.path(file="./row_2.pdf")
mirror <- c(rep(c(FALSE, TRUE), 7))
lg_list <- c('Chr02', 'LG02', 'Chr05', 'LG05', 'Chr08', 'LG08',  'Chr11', 'LG11', 'Chr14', 'LG14', 'Chr17', 'LG17', 'Chr20', 'LG20')
lmv.linkage.plot(lmv_dat, outfile,
mapthese=lg_list,
showonly=names,ruler=TRUE,posonleft=mirror,labdist=0.1,lgw=0.2,
pdf.height=4, pdf.width = 24,
pdf.pointsize=10,maxnbrcolsfordups=1,markerformatlist=flist,qtldf = combined_qtldf_2,
lgperrow=14,
par(lwd=0.25),lty.axis=0.5)
# ROW 3
outfile = file.path(file="./row_3.pdf")
lmv.linkage.plot(lmv_dat, outfile,
mapthese=lg_list,
showonly=names,ruler=TRUE,posonleft=mirror,labdist=0.1,lgw=0.2,
pdf.height=4, pdf.width = 24,
pdf.pointsize=10,maxnbrcolsfordups=1,markerformatlist=flist,qtldf = combined_qtldf,
lgperrow=14,
par(lwd=0.25),lty.axis=0.5)
lmv.linkage.plot(lmv_dat, outfile,
mapthese=lg_list,
showonly=names,ruler=TRUE,posonleft=mirror,labdist=0.1,lgw=0.2,
pdf.height=4, pdf.width = 24,
pdf.pointsize=10,maxnbrcolsfordups=1,markerformatlist=flist,qtldf = combined_qtldf,
lgperrow=14,
par(lwd=0.25),lty.axis=0.5)
# ROW 2
outfile = file.path(file="./row_2.pdf")
mirror <- c(rep(c(FALSE, TRUE), 7))
lg_list <- c('Chr02', 'LG02', 'Chr05', 'LG05', 'Chr08', 'LG08',  'Chr11', 'LG11', 'Chr14', 'LG14', 'Chr17', 'LG17', 'Chr20', 'LG20')
lmv.linkage.plot(lmv_dat, outfile,
mapthese=lg_list,
showonly=names,ruler=TRUE,posonleft=mirror,labdist=0.1,lgw=0.2,
pdf.height=4, pdf.width = 24,
pdf.pointsize=10,maxnbrcolsfordups=1,markerformatlist=flist,qtldf = combined_qtldf,
lgperrow=14,
par(lwd=0.25),lty.axis=0.5)
# in some cases the intervals for QTL will collapse on top
# of each other and so we create a blank white marker here to bump them out
# i had to make the map figures several times to identify and resolve and troubleshoot this problem
# see: for brief tutorial on this: https://github.com/bio-services/LinkageMapView/issues/13
all_data2 %>% filter(group == "LG08")
combined_qtldf
adjuster <- data.frame(marker_name = c("w", "w"),
cm_pos = c(400, 310),
group = c("LG02", "LG08"),
bp_pos = rep(NA, 2),
chr = c(2, 8),
display = rep("adjuster", 2),
bp_min = c(109865, 1162650),
bp_max = c(430937086, 431292282),
cm_min = rep(0, 2),
cm_max = c(143.98, 180.245),
map = rep("genetic", 2),
position = c(380, 310))
# add the adjuster markers to the map
all_data2 <- rbind(all_data2, adjuster)
combined_qtldf
#### Step 7: Load in the Linkage Mapping Results ####
# read in final LOD intervals from "Thresholds and 2-LOD Intervals.R
lod_intervals <- read.csv(paste(dir, "/QTL Linkage Mapping/output/lod_intervals_final.csv", sep = ""))
# select only QTL that were detected in the combined analysis to feature in the figure
lod_intervals_ed <- lod_intervals %>%
filter(famID == "combined") %>%
mutate(env = toupper(env),
chr = paste("LG", str_pad(lg, width = 2, side = c("left"), pad = "0"), sep = ""),
env_year = paste(env, year, sep = ""),
marker_name = NA) %>%
dplyr::select(lg, map, left, right, famID, trait, env, year, marker_name, chr, env_year) %>%
arrange(trait, map, lg, left, env_year)
# write out the result and manually combine approximately overlapping intervals and edit marker names
write.csv(lod_intervals_ed, "/Users/kayla.altendorf/OneDrive - USDA/Publications/IWG NAM Domestication Traits/Scripts for Github/Visualize Results/data/lod_intervals_ed.csv", row.names = F)
# delete markers that do not occur in more than one environment
# read back in
combined_qtl <- read.csv("/Users/kayla.altendorf/OneDrive - USDA/Publications/IWG NAM Domestication Traits/Scripts for Github/Visualize Results/data/lod_intervals_for_lmv.csv", header = T)
# prepare the map summary
map_sum_lg <- map_sum %>%
mutate(chr = str_replace(string = group, pattern = "Chr", replacement = "LG"))
# left join in the map sum
combined_qtl_map <- left_join(combined_qtl, map_sum_lg, by = "chr")
# calculate the ajusted positions and prepare order of dataframe for qtldf
combined_qtldf <- combined_qtl_map %>%
mutate(so = 1000 * (as.numeric(left) - cm_min) / (cm_max - cm_min),
si = so,
ei = 1000 * (as.numeric(right) - cm_min) / (cm_max - cm_min),
eo = ei,
qtl = marker_name,
col = "black") %>%
dplyr::select(chr, qtl, so, si, eo, ei, col, map)
# change the color based on the environment in which it was detected
for (i in 1:nrow(combined_qtldf)) {
if (combined_qtldf$map[i] == "DP") {combined_qtldf$col[i] <- "#56B4E9"}
else if (combined_qtldf$map[i] == "CP") {combined_qtldf$col[i] <- "#154ba1"}
}
# remove the group column
combined_qtldf <- combined_qtldf %>% dplyr::select(-map)
#### Step 8: Make the Figures ####
# select only needed columns
lmv_dat <- all_data2 %>%
dplyr::select(group, position, marker_name)
# first, all names that will be featured
names <- all_data2 %>%
filter(! is.na(display)) %>%
dplyr::select(marker_name)
names <- as.vector(as.matrix(names))
# then the genes
gene <- all_data2 %>%
filter(display == "gene") %>%
dplyr::select(marker_name)
gene <- as.vector(as.matrix(gene))
# the gwas QTL
gwas_qtl <- all_data2 %>%
filter(display == "gwas_qtl") %>%
dplyr::select(marker_name)
gwas_qtl <- as.vector(as.matrix(gwas_qtl))
# the ruler
ruler <- all_data2 %>%
filter(display == "ruler") %>%
dplyr::select(marker_name)
ruler <- as.vector(as.matrix(ruler))
# and the adjuster data
adjuster <- all_data2 %>%
filter(display == "adjuster") %>%
dplyr::select(marker_name)
adjuster <- as.vector(as.matrix(adjuster))
#### Step 9: Create the Format List ####
# create formatting list for marker names
flist <- list()
# gene names will be italic, black font
genes_vector <- gene
cex <- c(1) #size
font <- c(3)
col <- c("black")
flist[[1]] <- list(locus = genes_vector, font = font, cex = cex, col = col)
# gwas_qtl will be bold and blue
cex <- c(1) #size
font <- c(2) #bold
col <- c("black")
flist[[2]] <- list(locus = gwas_qtl, font = font, cex = cex, col = col)
# ruler
ruler_vector <- ruler
cex <- c(1) #size
font <- c(2) #plain
col <- c("black")
flist[[3]] <- list(locus = ruler_vector, font = font, cex = cex, col = col)
# adjuster values will be white so they're invisible
adjuster_vector <- adjuster
cex <- c(1) #size
font <- c(2) #plain
col <- c("white")
flist[[4]] <- list(locus = adjuster_vector, font = font, cex = cex, col = col)
#### Step 10: Create Each Plot ####
# set the working directory
setwd(paste(dir, folder, "output", sep = "/"))
row_to_add_1 <- combined_qtldf %>%
slice(1:1) %>%
mutate(chr = "LG02",
col = '#FFFFFF')
row_to_add_2 <- combined_qtldf %>%
slice(9:9) %>%
mutate(chr = "LG08",
col = '#FFFFFF')
row_to_add_3 <- combined_qtldf %>%
slice(1:3) %>%
mutate(chr = "LG07",
col = '#FFFFFF')
# ROW 1
outfile = file.path(file="./row_1.pdf")
mirror <- c(rep(c(FALSE, TRUE), 7))
lg_list <- c('Chr01', 'LG01', 'Chr04', 'LG04', 'Chr07', 'LG07', 'Chr10', 'LG10',
'Chr13', 'LG13', 'Chr16', 'LG16', 'Chr19', 'LG19')
lmv.linkage.plot(lmv_dat, outfile,
mapthese=lg_list,
showonly=names,ruler=TRUE,posonleft=mirror,labdist=0.1,lgw=0.2,
pdf.height=4, pdf.width = 24,
pdf.pointsize=10,maxnbrcolsfordups=1,markerformatlist=flist,qtldf = combined_qtldf,
lgperrow=14,
par(lwd=0.25),lty.axis=0.5)
# ROW 2
outfile = file.path(file="./row_2.pdf")
mirror <- c(rep(c(FALSE, TRUE), 7))
lg_list <- c('Chr02', 'LG02', 'Chr05', 'LG05', 'Chr08', 'LG08',  'Chr11', 'LG11', 'Chr14', 'LG14', 'Chr17', 'LG17', 'Chr20', 'LG20')
lmv.linkage.plot(lmv_dat, outfile,
mapthese=lg_list,
showonly=names,ruler=TRUE,posonleft=mirror,labdist=0.1,lgw=0.2,
pdf.height=4, pdf.width = 24,
pdf.pointsize=10,maxnbrcolsfordups=1,markerformatlist=flist,qtldf = combined_qtldf,
lgperrow=14,
par(lwd=0.25),lty.axis=0.5)
# ROW 3
outfile = file.path(file="./row_3.pdf")
mirror <- c(rep(c(FALSE, TRUE), 7))
lg_list <- c('Chr03', 'LG03', 'Chr06', 'LG06', 'Chr09', 'LG09',  'Chr12', 'LG12', 'Chr15', 'LG15', 'Chr18', 'LG18', 'Chr21', 'LG21')
lmv.linkage.plot(lmv_dat, outfile,
mapthese=lg_list,
showonly=names,ruler=TRUE,posonleft=mirror,labdist=0.1,lgw=0.2,
pdf.height=4,pdf.width = 24,
pdf.pointsize=10,maxnbrcolsfordups=1,markerformatlist=flist,qtldf = combined_qtldf_2,
lgperrow=14,
par(lwd=0.25),lty.axis=0.5)
lg_list <- c('Chr01', 'LG01', 'Chr04', 'LG04', 'Chr07', 'LG07', 'Chr10', 'LG10',
'Chr13', 'LG13', 'Chr16', 'LG16', 'Chr19', 'LG19', 'Chr02', 'LG02', 'Chr05', 'LG05', 'Chr08', 'LG08',  'Chr11',
'LG11', 'Chr14', 'LG14', 'Chr17', 'LG17', 'Chr20', 'LG20', 'Chr03', 'LG03', 'Chr06', 'LG06', 'Chr09', 'LG09',
'Chr12', 'LG12', 'Chr15', 'LG15', 'Chr18', 'LG18', 'Chr21', 'LG21')
lg_list
lg_list <- c('Chr01', 'LG01', 'Chr04', 'LG04', 'Chr07', 'LG07', 'Chr10', 'LG10',
'Chr13', 'LG13', 'Chr16', 'LG16', 'Chr19', 'LG19', 'Chr02', 'LG02', 'Chr05', 'LG05', 'Chr08', 'LG08',  'Chr11', 'LG11', 'Chr14', 'LG14', 'Chr17', 'LG17', 'Chr20', 'LG20',
'Chr03', 'LG03', 'Chr06', 'LG06', 'Chr09', 'LG09',  'Chr12', 'LG12', 'Chr15', 'LG15', 'Chr18', 'LG18', 'Chr21', 'LG21')
lg_list
# all together
outfile = file.path(file="./.pdf")
mirror <- c(rep(c(FALSE, TRUE), 21))
lg_list <- c('Chr01', 'LG01', 'Chr04', 'LG04', 'Chr07', 'LG07', 'Chr10', 'LG10',
'Chr13', 'LG13', 'Chr16', 'LG16', 'Chr19', 'LG19', 'Chr02', 'LG02', 'Chr05', 'LG05', 'Chr08', 'LG08',  'Chr11', 'LG11', 'Chr14', 'LG14', 'Chr17', 'LG17', 'Chr20', 'LG20',
'Chr03', 'LG03', 'Chr06', 'LG06', 'Chr09', 'LG09',  'Chr12', 'LG12', 'Chr15', 'LG15', 'Chr18', 'LG18', 'Chr21', 'LG21')
lmv.linkage.plot(lmv_dat, outfile,
mapthese=lg_list,
showonly=names,ruler=TRUE,posonleft=mirror,labdist=0.1,lgw=0.2,
pdf.height=24,pdf.width = 24,
pdf.pointsize=10,maxnbrcolsfordups=1,markerformatlist=flist,qtldf = combined_qtldf_2,
lgperrow=14,
par(lwd=0.25),lty.axis=0.5)
# all together
outfile = file.path(file="./all.pdf")
mirror <- c(rep(c(FALSE, TRUE), 21))
lg_list <- c('Chr01', 'LG01', 'Chr04', 'LG04', 'Chr07', 'LG07', 'Chr10', 'LG10',
'Chr13', 'LG13', 'Chr16', 'LG16', 'Chr19', 'LG19', 'Chr02', 'LG02', 'Chr05', 'LG05', 'Chr08', 'LG08',  'Chr11', 'LG11', 'Chr14', 'LG14', 'Chr17', 'LG17', 'Chr20', 'LG20',
'Chr03', 'LG03', 'Chr06', 'LG06', 'Chr09', 'LG09',  'Chr12', 'LG12', 'Chr15', 'LG15', 'Chr18', 'LG18', 'Chr21', 'LG21')
lmv.linkage.plot(lmv_dat, outfile,
mapthese=lg_list,
showonly=names,ruler=TRUE,posonleft=mirror,labdist=0.1,lgw=0.2,
pdf.height=24,pdf.width = 24,
pdf.pointsize=10,maxnbrcolsfordups=1,markerformatlist=flist,qtldf = combined_qtldf_2,
lgperrow=14,
par(lwd=0.25),lty.axis=0.5)
lmv.linkage.plot(lmv_dat, outfile,
mapthese=lg_list,
showonly=names,ruler=TRUE,posonleft=mirror,labdist=0.1,lgw=0.2,
pdf.height=15,pdf.width = 24,
pdf.pointsize=10,maxnbrcolsfordups=1,markerformatlist=flist,qtldf = combined_qtldf_2,
lgperrow=14,
par(lwd=0.25),lty.axis=0.5)
lmv.linkage.plot(lmv_dat, outfile,
mapthese=lg_list,
showonly=names,ruler=TRUE,posonleft=mirror,labdist=0.1,lgw=0.2,
pdf.height=10,pdf.width = 24,
pdf.pointsize=10,maxnbrcolsfordups=1,markerformatlist=flist,qtldf = combined_qtldf_2,
lgperrow=14,
par(lwd=0.25),lty.axis=0.5)
lmv.linkage.plot(lmv_dat, outfile,
mapthese=lg_list,
showonly=names,ruler=TRUE,posonleft=mirror,labdist=0.1,lgw=0.2,
pdf.height=15,pdf.width = 15,
pdf.pointsize=10,maxnbrcolsfordups=1,markerformatlist=flist,qtldf = combined_qtldf_2,
lgperrow=14,
par(lwd=0.25),lty.axis=0.5)
lmv.linkage.plot(lmv_dat, outfile,
mapthese=lg_list,
showonly=names,ruler=TRUE,posonleft=mirror,labdist=0.1,lgw=0.2,
pdf.height=15,pdf.width = 25,
pdf.pointsize=10,maxnbrcolsfordups=1,markerformatlist=flist,qtldf = combined_qtldf_2,
lgperrow=14,
par(lwd=0.25),lty.axis=0.5)
